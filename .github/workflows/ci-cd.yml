name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  NODE_VERSION: '18'
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./weather-report
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: './weather-report/package-lock.json'

    - name: Install dependencies
      run: npm ci

    - name: Install ESLint and Prettier
      run: |
        npm install --save-dev eslint @typescript-eslint/parser @typescript-eslint/eslint-plugin prettier eslint-config-prettier eslint-plugin-prettier

    - name: Run ESLint
      run: npx eslint source/**/*.ts --ext .ts

    - name: Run Prettier check
      run: npx prettier --check source/**/*.ts

  test:
    name: Test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./weather-report
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: './weather-report/package-lock.json'

    - name: Install dependencies
      run: npm ci

    - name: Install Jest and testing dependencies
      run: |
        npm install --save-dev jest @types/jest ts-jest

    - name: Run tests
      run: npm test
      continue-on-error: true

  build:
    name: Build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./weather-report
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: './weather-report/package-lock.json'

    - name: Install dependencies
      run: npm ci

    - name: Build application
      run: npm run build

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-files
        path: ./weather-report/dist/
        retention-days: 7

  sonarcloud:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest
    needs: [lint, test, build]
    defaults:
      run:
        working-directory: ./weather-report
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: './weather-report/package-lock.json'

    - name: Install dependencies
      run: npm ci

    - name: Install ESLint and testing dependencies
      run: |
        npm install --save-dev eslint @typescript-eslint/parser @typescript-eslint/eslint-plugin prettier eslint-config-prettier eslint-plugin-prettier jest @types/jest ts-jest

    - name: Build application
      run: npm run build

    - name: Run tests with coverage
      run: |
        npm install --save-dev jest @types/jest ts-jest
        npx jest --coverage --coverageReporters=lcov --coverageReporters=text-summary

    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      with:
        args: >
          -Dsonar.projectKey=your-organization_weather-checker-app
          -Dsonar.organization=your-organization
          -Dsonar.sources=source
          -Dsonar.tests=source
          -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info
          -Dsonar.testExecutionReportPaths=test-report.xml
          -Dsonar.coverage.exclusions=**/*.test.ts,**/*.spec.ts,**/node_modules/**
          -Dsonar.test.inclusions=**/*.test.ts,**/*.spec.ts
          -Dsonar.typescript.lcov.reportPaths=coverage/lcov.info
          -Dsonar.typescript.tsconfigPath=tsconfig.json 